
==================== FINAL INTERFACE ====================
2017-08-16 10:57:02.575753 UTC

interface testHaskell-0.1.0.0-rJfTykrnANG4sb3MLkjDL:Lib 8002
  interface hash: d7d90732d82816e456b9db6ce08d1534
  ABI hash: a8a202d07e7398a1cfa35c4a47b2ef3c
  export-list hash: 57f4ea95e9ec2d59666f9ed60c9aaf70
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.greet
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
2cefb263b179887e9b72d420da0aba9e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
488e910e70789ef6cd4d65dab4158af6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
a979bcd833956d4357072cf36460eb9a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "testHaskell-0.1.0.0-rJfTykrnANG4sb3MLkjDL"#) -}
593f5689b646d3769781117c80bb4787
  greet :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (name :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   "Hello "#
                   (GHC.Base.++ @ GHC.Types.Char name Lib.greet1)) -}
7854c74867d20c2f54e52e4fcff5ca40
  greet1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ", nice to meet you!"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

