
==================== FINAL INTERFACE ====================
2018-08-29 20:59:56.7594792 UTC

interface realworldhaskell-0.1.0.0-CL4wTfgpaBMAu0LmMG20cc:Training 8002
  interface hash: 786d20a9845747a0252cb26164da1af3
  ABI hash: 4f7e57142b7ad374b97930f21f8fd91b
  export-list hash: 2b1e8ab115577d97a29b129766f6c85e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8b9d12607d844ec5a945f13edb7c4296
  sig of: Nothing
  used TH splices: False
  where
exports:
  Training.forwardPassLayer
  Training.randomInputs
  Training.randomWeights
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      bed-and-breakfast-0.1.2@bed-and-breakfast-0.1.2-DqujkKSaLk1E9HHVA1dnqY*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog*
                      time-1.6.0.1@time-1.6.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bed-and-breakfast-0.1.2@bed-and-breakfast-0.1.2-DqujkKSaLk1E9HHVA1dnqY:Numeric.Matrix
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  bed-and-breakfast-0.1.2@bed-and-breakfast-0.1.2-DqujkKSaLk1E9HHVA1dnqY:Numeric.Matrix 32c1616afe70654d40ff95ca2145c2f5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 4c90117f915e12291e0c5f588320bf66
90deb6f39f26e29bc6fc039d339e3a5c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Training.$trModule2
                   Training.$trModule1) -}
29f19a0d98e6aeb92057e9494d0ca7c8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Training"#) -}
68d6ac2da89f2a41d1a06a0ce455de0f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "realworldhaskell-0.1.0.0-CL4wTfgpaBMAu0LmMG20cc"#) -}
d28c64038d80534eaf5db3a106e7cdca
  $wforwardPassLayer ::
    GHC.Prim.Int#
    -> GHC.Arr.Array
         GHC.Types.Int
         (Data.Array.Base.UArray GHC.Types.Int GHC.Types.Double)
    -> GHC.Prim.Int#
    -> GHC.Arr.Array
         GHC.Types.Int
         (Data.Array.Base.UArray GHC.Types.Int GHC.Types.Double)
    -> Numeric.Matrix.Matrix GHC.Types.Double
  {- Arity: 4,
     Strictness: <S,U><L,U(U(U),U(U),U,U)><S,U><L,U(U(U),U(U),U,U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Arr.Array
                             GHC.Types.Int
                             (Data.Array.Base.UArray GHC.Types.Int GHC.Types.Double))
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Arr.Array
                             GHC.Types.Int
                             (Data.Array.Base.UArray GHC.Types.Int GHC.Types.Double)) ->
                 case (Numeric.Matrix.$w$ctimes1 ww ww1 ww2 ww3)
                        `cast`
                      (Numeric.Matrix.D:R:MatrixDouble0[0]) of wild { Numeric.Matrix.DoubleMatrix m n ds ->
                 Numeric.Matrix.$w$s_matrix
                   @ Numeric.Matrix.Matrix
                   Numeric.Matrix.$WDoubleMatrix
                   m
                   n
                   (\ (x :: (GHC.Types.Int, GHC.Types.Int)) ->
                    case ds of ww4 { GHC.Arr.Array ww5 ww6 ww7 ww8 ->
                    case ww5 of ww9 { GHC.Types.I# ww10 ->
                    case ww6 of ww11 { GHC.Types.I# ww12 ->
                    case x of ww13 { (,) ww14 ww15 ->
                    case ww14 of ww16 { GHC.Types.I# ww17 ->
                    case ww15 of ww18 { GHC.Types.I# ww19 ->
                    case Numeric.Matrix.$w$s_at3
                           ww10
                           ww12
                           ww7
                           ww8
                           ww17
                           ww19 of ww20 { DEFAULT ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.>## ww20 0.0##) of wild1 {
                      GHC.Types.False -> GHC.Types.D# (GHC.Prim.*## 1.0e-2## ww20)
                      GHC.Types.True -> GHC.Types.D# ww20 } } } } } } } }) }) -}
d95ed7b9a6a0af222467359a960e8fcc
  forwardPassLayer ::
    Numeric.Matrix.Matrix GHC.Types.Double
    -> Numeric.Matrix.Matrix GHC.Types.Double
    -> Numeric.Matrix.Matrix GHC.Types.Double
  {- Arity: 2,
     Strictness: <S(S(S)LL),1*U(1*U(U),A,U(U(U),U(U),U,U))><S(LS(S)L),1*U(A,1*U(U),U(U(U),U(U),U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Numeric.Matrix.Matrix GHC.Types.Double)
                   (w1 :: Numeric.Matrix.Matrix GHC.Types.Double) ->
                 case w `cast`
                      (Numeric.Matrix.D:R:MatrixDouble0[0]) of ww { Numeric.Matrix.DoubleMatrix ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 case w1
                        `cast`
                      (Numeric.Matrix.D:R:MatrixDouble0[0]) of ww6 { Numeric.Matrix.DoubleMatrix ww7 ww8 ww9 ->
                 case ww8 of ww10 { GHC.Types.I# ww11 ->
                 Training.$wforwardPassLayer ww5 ww3 ww11 ww9 } } } }) -}
19c105e022ebd94fe3a75072e9c43901
  randomInputs ::
    GHC.Types.Int -> Numeric.Matrix.Matrix GHC.Types.Double
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (inputSize :: GHC.Types.Int) ->
                 let {
                   random :: [GHC.Types.Double]
                   = Training.randomInputs_go (System.Random.mkStdGen inputSize)
                 } in
                 Numeric.Matrix.$w$s_matrix
                   @ Numeric.Matrix.Matrix
                   Numeric.Matrix.$WDoubleMatrix
                   inputSize
                   Training.randomInputs1
                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) ->
                    case ds of wild { (,) x y ->
                    case x of wild1 { GHC.Types.I# x1 ->
                    case y of wild2 { GHC.Types.I# y1 ->
                    GHC.List.$w!!
                      @ GHC.Types.Double
                      random
                      (GHC.Prim.*# x1 y1) } } })) -}
28c1fac797612ff2ac9f87bd884264b6
  randomInputs1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
45ce5f50f54593d43e14e3116029957e
  randomInputs_go :: System.Random.StdGen -> [GHC.Types.Double]
  {- Arity: 1, Strictness: <L,U> -}
e315b0b6a53a289c8d93662a12eb16a0
  randomWeights ::
    GHC.Types.Int
    -> GHC.Types.Int -> Numeric.Matrix.Matrix GHC.Types.Double
  {- Arity: 2, Strictness: <L,U(U)><L,U(U)>,
     Unfolding: (\ (inputSize :: GHC.Types.Int)
                   (outputSize :: GHC.Types.Int) ->
                 let {
                   random :: [GHC.Types.Double]
                   = Training.randomInputs_go
                       (case inputSize of wild { GHC.Types.I# x ->
                        case outputSize of wild1 { GHC.Types.I# y ->
                        case GHC.Int.$w$cdivMod1
                               (GHC.Prim.word2Int#
                                  (GHC.Prim.and#
                                     (GHC.Prim.int2Word# (GHC.Prim.narrow32Int# (GHC.Prim.*# x y)))
                                     2147483647##))
                               2147483562# of ww4 { (#,#) ww5 ww6 ->
                        case ww6 of wild2 { GHC.Int.I32# x# ->
                        case ww5 of ww2 { GHC.Int.I32# ww3 ->
                        case GHC.Classes.modInt# ww3 2147483398# of wild3 { DEFAULT ->
                        System.Random.StdGen
                          (GHC.Prim.narrow32Int# (GHC.Prim.+# x# 1#))
                          (GHC.Prim.narrow32Int#
                             (GHC.Prim.+# (GHC.Prim.narrow32Int# wild3) 1#)) } } } } } })
                 } in
                 Numeric.Matrix.$w$s_matrix
                   @ Numeric.Matrix.Matrix
                   Numeric.Matrix.$WDoubleMatrix
                   inputSize
                   outputSize
                   (\ (ds :: (GHC.Types.Int, GHC.Types.Int)) ->
                    case ds of wild { (,) x y ->
                    case x of wild1 { GHC.Types.I# x1 ->
                    case y of wild2 { GHC.Types.I# y1 ->
                    GHC.List.$w!!
                      @ GHC.Types.Double
                      random
                      (GHC.Prim.*# x1 y1) } } })) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

