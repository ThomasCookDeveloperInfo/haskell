
==================== FINAL INTERFACE ====================
2018-08-25 17:16:46.184711 UTC

interface testHaskell-0.1.0.0-DDHc0VNv3ysIgqjXjB5DvZ:Lib 8002
  interface hash: c49f1a9313c2bb1b8261704c4a048913
  ABI hash: 45ec3ccaa48b21d207606a37beeae61e
  export-list hash: ad9693231b9ab39056d91ea00ae22621
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8b9d12607d844ec5a945f13edb7c4296
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.program
  Lib.render
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog*
                      time-1.6.0.1@time-1.6.0.1
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy a933f8de698ac656298f2d79daa92bb5
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 4c90117f915e12291e0c5f588320bf66
import  -/  zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.GZip d857081aa5810b7619d9a77c7a9cc337
dd0d0cf8604f4f191ffcf6b752219a0d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
e8fefc165eb24f2d5e748da473da5ad5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
53eade5b6be002581116721556ba8cce
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "testHaskell-0.1.0.0-DDHc0VNv3ysIgqjXjB5DvZ"#) -}
c574e60d5d7e1b7f69d3c7ac1bf35b6c
  program :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.program1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7c22378ce011a65962dd4b8ee60a914f
  program1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
95ceb9c4bbfa8a77c44ff1fbc63ffa2b
  render :: GHC.Real.Integral a => a -> GHC.Types.Char
  {- Arity: 2,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>,
     Unfolding: (\ @ a ($dIntegral :: GHC.Real.Integral a) (n :: a) ->
                 case GHC.Integer.Type.integerToInt
                        (GHC.Real.toInteger @ a $dIntegral n) of wild { DEFAULT ->
                 case Lib.render1 of wild1 { GHC.Types.I# y ->
                 case GHC.Classes.divInt#
                        (GHC.Prim.*# wild y)
                        256# of ww4 { DEFAULT ->
                 GHC.List.$w!! @ GHC.Types.Char Lib.render_s ww4 } } }) -}
3409d6e087d519ca987dbb44f8b49aa6
  render1 :: GHC.Types.Int
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Lib.render_s
                        0# of ww2 { DEFAULT ->
                 GHC.Types.I# ww2 }) -}
14b91fcd0eca30758e518e34415739d9
  render_s :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "..oO@"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

