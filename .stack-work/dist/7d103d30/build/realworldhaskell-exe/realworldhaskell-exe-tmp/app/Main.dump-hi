
==================== FINAL INTERFACE ====================
2018-09-03 18:38:51.0551327 UTC

interface main:Main 8043
  interface hash: c13e8aabf00aab760e8dfadd4c56caa4
  ABI hash: 661d7de0682c721a3f739969f970c262
  export-list hash: 263a3434af5e92857306ff59d6167941
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d87f248f9ae9bc0238e4193b27a2dc68
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Win32-2.6.1.0 array-0.5.2.0 base-4.11.1.0
                      deepseq-1.4.3.0 ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 loop-0.3.0
                      matrix-0.3.6.1 primitive-0.6.3.0 random-1.1
                      realworldhaskell-0.1.0.0 time-1.8.0.2 transformers-0.5.5.0
                      vector-0.12.0.1
orphans: vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         matrix-0.3.6.1:Data.Matrix
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array vector-0.12.0.1:Data.Vector
import  -/  base-4.11.1.0:Data.Typeable 2ebbe848f8b5e0773c8b3cfc605f82b6
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Show 6211aec7cccd267a5ee999e4414d7b90
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:System.IO 7331ec6891ba7763ad75720258619382
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  random-1.1:System.Random cf743494f6d6907bf2f14dbc9174bff3
import  -/  realworldhaskell-0.1.0.0:Chapter2 85de9a66c61bb2b4168560db0545552a
import  -/  realworldhaskell-0.1.0.0:Chapter4 c8fd74c4317405428078f9b827623a77
import  -/  realworldhaskell-0.1.0.0:Training 76c4f7d87de659f4d871ecf87d6cabd9
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
7e3378ff13b6964c552448c246563443
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
dea97e88dbf1c2b07b0aec4ba5d205e8
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main37
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main34
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main10
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, System.Random.StdGen)
                        @ System.Random.StdGen
                        r#
                        System.Random.newStdGen2
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv7 of b1 { System.Random.StdGen ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv10 ipv11 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Data.Matrix.prettyMatrix
                      @ GHC.Types.Double
                      GHC.Float.$fShowDouble
                      (case Training.$wforwardPass
                              @ System.Random.StdGen
                              System.Random.$fRandomGenStdGen
                              b1
                              Main.main2
                              2#
                              1# of ww4 { (#,,,,,#) ww5 ww6 ww7 ww8 ww9 ww10 ->
                       Data.Matrix.M @ GHC.Types.Double ww5 ww6 ww7 ww8 ww9 ww10 }))
                   GHC.Types.True
                   ipv10 } } } } } } }) -}
1ccdd740df0048828f6bc363546f5668
  main10 :: GHC.Base.String
  {- Unfolding: (case Chapter2.findWorkspace
                        Main.main20
                        Main.main11 of wild {
                   GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                   GHC.Base.Just b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        GHC.Show.$fShowMaybe1
                        (case b1 of ww2 { Chapter2.Location ww3 ww4 ww5 ->
                         Chapter2.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           ww5
                           (GHC.Types.[] @ GHC.Types.Char) }) }) -}
059bff6769b516a553f6d212d594de58
  main11 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main12
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
a66de88a7ded2dbf54fd9d8fa84cb25c
  main12 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main33
                   Main.main31
                   Main.main13) -}
a9f0e18ed02c7025a9ff306c6cc96788
  main13 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main27
                   Main.main14) -}
f70965da1bb6c1487af8342ebfb94054
  main14 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main15
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
39a0f5c92d035324498e9cc9d410f6eb
  main15 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main26
                   Main.main24
                   Main.main16) -}
cd7026485646d1596d3a5e7d462a3cba
  main16 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main_roomA
                   Main.main17) -}
dfb55697d982bf75b6e3653a66d90e6b
  main17 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main_roomB
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
5be881fa967efd24c1832a5ec00c60db
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main19) -}
1db94ffaaffc7b90660112cc5340d1e4
  main19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Room B"#) -}
c018da36b59a3fb2706e80b60cf4dda5
  main2 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main5
                   Main.main3) -}
acf1223fbf6c7e37f00d88ef85bec66f
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
e116812526ab9426897909faff9018d6
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main22) -}
f208f5b62d41afa6050bae5fcd4877f1
  main22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Room A"#) -}
07f82d212dcbfb892df7462259902590
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
75df99711137354a6d68a9f2b139d120
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main25) -}
2cca1936d779887aa69fa2743a96b875
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Floor 2"#) -}
d849f102df7c0ed3b1cedc6d0a02078f
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
8d3b8f902e52a440ed420899652d47da
  main27 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main30
                   Main.main28
                   Main.main16) -}
1a4e95e13d85ef98779379478fe6cd6c
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main29) -}
088e041e63237eaf8fd975c511eb5962
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Floor 1"#) -}
dd11e236bcc42c60b4436d46c8d55b40
  main3 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main4
                   (GHC.Types.[] @ GHC.Types.Double)) -}
d66e721c13416aca9a24261cd0459592
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
711024db43de0c7c69b76a29dd6fe7af
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main32) -}
d86ee36e77b71fbde3d31b775fd55faf
  main32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Newcastle Office"#) -}
49310c6d013b4dab0cb3080d7fd9f819
  main33 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
1b9d3c474370d2bc7e1a7ff1e341fad3
  main34 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main35) -}
2feffb7d4031cdb4e72980d2fd631e27
  main35 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (GHC.CString.unpackAppendCString# Main.main36 GHC.Show.$fShowBool4)
                   GHC.Show.$fShow[]1) -}
571df34b521cece9989771d242b21263
  main36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("myIsEmpty: "#) -}
143842036ffcda9cda405ee754afcd1d
  main37 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main38) -}
1830c1312ee5baf9f70d5bec4ae9698f
  main38 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (GHC.CString.unpackAppendCString# Main.main36 Main.main39)
                   GHC.Show.$fShow[]1) -}
c0e7742fe14ade0fa95ccf3520b91f9a
  main39 :: [GHC.Types.Char]
  {- Unfolding: (case Chapter4.$wmyLength
                        @ GHC.Types.Char
                        (GHC.CString.unpackCString# Main.main40) of ww { DEFAULT ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
aa63b86fa4e71bed661cb48f6be84cb7
  main4 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0##) -}
b0117399aba12429f6a9bb2cf3d6f00b
  main40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Hello world!"#) -}
2ab3da21a5afc0039bf2b88ef4468255
  main41 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
d4dfb5674ebb796e04b4a53087e44bc3
  main5 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
1942bd8feb1702147d824872e45dafcb
  main6 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__3
                   Main.main7) -}
57682fe175fb2cf5dc277c6b061bcced
  main7 :: GHC.Base.String
  {- Unfolding: (Main.main9 Main.main8) -}
0a6c1e95dba529fe2a3325e9ab68bd0e
  main8 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Main.main3) -}
35b98cbd28a37228e1bf3bb39e5fb00d
  main9 :: GHC.Show.ShowS
  {- Unfolding: (GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble2
                   GHC.Float.minExpt
                   0.0##) -}
212e2cb08a50dd2abd60e2c0c7169897
  main_roomA :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main23
                   Main.main21
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
744fe3f7dc9a2b378fe9069e740fbbbf
  main_roomB :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main20
                   Main.main18
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
993b887cf629c964a4e9f28a3d8e6c5a
  main_showl :: [GHC.Types.Double] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2 -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

