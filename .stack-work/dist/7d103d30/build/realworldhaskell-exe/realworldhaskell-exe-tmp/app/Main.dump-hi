
==================== FINAL INTERFACE ====================
2018-09-03 19:09:20.0891838 UTC

interface main:Main 8043
  interface hash: 19b428dd337aea5452728e59eec08e58
  ABI hash: 64b6c5d5e8d36fdb8a7836f032af0287
  export-list hash: 263a3434af5e92857306ff59d6167941
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d87f248f9ae9bc0238e4193b27a2dc68
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Win32-2.6.1.0 array-0.5.2.0 base-4.11.1.0
                      deepseq-1.4.3.0 ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 loop-0.3.0
                      matrix-0.3.6.1 primitive-0.6.3.0 random-1.1
                      realworldhaskell-0.1.0.0 time-1.8.0.2 transformers-0.5.5.0
                      vector-0.12.0.1
orphans: vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         matrix-0.3.6.1:Data.Matrix
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array vector-0.12.0.1:Data.Vector
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:Data.Typeable 2ebbe848f8b5e0773c8b3cfc605f82b6
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Show 6211aec7cccd267a5ee999e4414d7b90
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:System.IO 7331ec6891ba7763ad75720258619382
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  random-1.1:System.Random cf743494f6d6907bf2f14dbc9174bff3
import  -/  realworldhaskell-0.1.0.0:Chapter2 85de9a66c61bb2b4168560db0545552a
import  -/  realworldhaskell-0.1.0.0:Chapter4 c8fd74c4317405428078f9b827623a77
import  -/  realworldhaskell-0.1.0.0:Training 7da09346a728d9cff06007ce015d1ce8
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
e29df514bf2593eae15d2950e8b8c71a
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
bf16c4bbe5f5d1051c3b8a3c15236e18
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main36
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main33
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, System.Random.StdGen)
                        @ System.Random.StdGen
                        r#
                        System.Random.newStdGen2
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv7 of b1 { System.Random.StdGen ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv10 ipv11 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Data.Matrix.prettyMatrix
                      @ GHC.Types.Double
                      GHC.Float.$fShowDouble
                      (case Training.$wactivate
                              Main.main_inputs
                              (GHC.Types.:
                                 @ (Data.Matrix.Matrix GHC.Types.Double)
                                 (case GHC.List.$wlenAcc
                                         @ GHC.Types.Double
                                         Main.main_inputs
                                         0# of ww2 { DEFAULT ->
                                  case Training.$wrandomWeights
                                         @ System.Random.StdGen
                                         System.Random.$fRandomGenStdGen
                                         b1
                                         ww2
                                         3# of ww4 { (#,,,,,#) ww5 ww6 ww7 ww8 ww9 ww10 ->
                                  Data.Matrix.M @ GHC.Types.Double ww5 ww6 ww7 ww8 ww9 ww10 } })
                                 (GHC.Types.:
                                    @ (Data.Matrix.Matrix GHC.Types.Double)
                                    (case Training.$wrandomWeights
                                            @ System.Random.StdGen
                                            System.Random.$fRandomGenStdGen
                                            b1
                                            3#
                                            1# of ww4 { (#,,,,,#) ww5 ww6 ww7 ww8 ww9 ww10 ->
                                     Data.Matrix.M @ GHC.Types.Double ww5 ww6 ww7 ww8 ww9 ww10 })
                                    (GHC.Types.:
                                       @ (Data.Matrix.Matrix GHC.Types.Double)
                                       (case Training.$wrandomWeights
                                               @ System.Random.StdGen
                                               System.Random.$fRandomGenStdGen
                                               b1
                                               1#
                                               1# of ww4 { (#,,,,,#) ww5 ww6 ww7 ww8 ww9 ww10 ->
                                        Data.Matrix.M @ GHC.Types.Double ww5 ww6 ww7 ww8 ww9 ww10 })
                                       (GHC.Types.[]
                                          @ (Data.Matrix.Matrix
                                               GHC.Types.Double))))) of ww { (#,,,,,#) ww1 ww2 ww3 ww4 ww5 ww6 ->
                       Data.Matrix.M @ GHC.Types.Double ww1 ww2 ww3 ww4 ww5 ww6 }))
                   GHC.Types.True
                   ipv10 } } } } } } }) -}
f6f9469dfa74f8382d6f76e55095e159
  main10 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main11
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
a5bf6f5da335a59676ef335754cb9d9a
  main11 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main32
                   Main.main30
                   Main.main12) -}
b693e57928917232764cf81fc1e69b97
  main12 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main26
                   Main.main13) -}
82aac6c41d67db4a34c4ea0e0dc288ba
  main13 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main14
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
67dc33d386e5e44a243c2ceee22b7fa2
  main14 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main25
                   Main.main23
                   Main.main15) -}
e2e2f68ed9369147594925743056db88
  main15 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main_roomA
                   Main.main16) -}
e9a8e6d5b4742738a1f4f5e021992049
  main16 :: [Chapter2.Workspace]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Chapter2.Workspace
                   Main.main_roomB
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
fd3160ad62ff2e4157cbac9ba136444f
  main17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main18) -}
251425a789953649ef79374a4efe787a
  main18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Room B"#) -}
fc8899e2a607d3e1bae3a98688fb4314
  main19 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
33b4d8f8024898900fff5b22dcc9a8e3
  main2 :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main3
                   (GHC.Types.[] @ GHC.Types.Double)) -}
68cf51a72507d2e56216f776b5f42df4
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main21) -}
03f900f4de77330280d602caccec8e02
  main21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Room A"#) -}
2d94236b3082b47f3b4a507c94893bef
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
ef9c7785cb1e581244860ee8f9362b8a
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main24) -}
36d21465efd7514cd20be23ca617961b
  main24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Floor 2"#) -}
720bbe7c89376b333c0f36e1e2a11901
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
c993aba45b0af6936ee840311ee62a6d
  main26 :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main29
                   Main.main27
                   Main.main15) -}
7850208c7048980668f953b6a227c765
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main28) -}
cc3f95abaad87b5b1280b7d315bb0ccf
  main28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Floor 1"#) -}
e0887bd2801f48f108ede1ba6ce7b392
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
57bbd56acddb43e9e916450e7655bd0a
  main3 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0##) -}
9f720d45146eb394c455e6f658321892
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main31) -}
bbc4c4ea0446ef65b4621e1a7cf1ec88
  main31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Newcastle Office"#) -}
46f129cef25cb85a1b3ca7b6afacc346
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
ee64eb6a182e197860c385ec30b2b805
  main33 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main34) -}
6273799d5e283360883ed519d0e53a74
  main34 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (GHC.CString.unpackAppendCString# Main.main35 GHC.Show.$fShowBool4)
                   GHC.Show.$fShow[]1) -}
c5ae0b79920b01d235f76a40884e89bd
  main35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("myIsEmpty: "#) -}
b1f88bc0aa3f1be45cfbd510506a90ed
  main36 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main37) -}
948970226508e3a49c5d0b3a11018820
  main37 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (GHC.CString.unpackAppendCString# Main.main35 Main.main38)
                   GHC.Show.$fShow[]1) -}
9d3a403b4d93e56016296d7c86963ea7
  main38 :: [GHC.Types.Char]
  {- Unfolding: (case Chapter4.$wmyLength
                        @ GHC.Types.Char
                        (GHC.CString.unpackCString# Main.main39) of ww { DEFAULT ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
fab07ffa1aba61f5ba1c7920f12b3875
  main39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Hello world!"#) -}
d7af8fa09846058e62c9a76f6f72f582
  main4 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
93636f47b05894c72570d741a9606a5c
  main40 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ce0fc2c19d8b925659de16b8a52c37be
  main5 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__3
                   Main.main6) -}
3807e0e5ee89f865def0c709c895e18e
  main6 :: GHC.Base.String
  {- Unfolding: (Main.main8 Main.main7) -}
9fc93df2038fb8e4c6e8842f7b1ba31a
  main7 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Main.main2) -}
37709620aad7d1046b096fff5b00d7ca
  main8 :: GHC.Show.ShowS
  {- Unfolding: (GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble2
                   GHC.Float.minExpt
                   0.0##) -}
61a57b8d2730266ed0a94fb6fca1731b
  main9 :: GHC.Base.String
  {- Unfolding: (case Chapter2.findWorkspace
                        Main.main19
                        Main.main10 of wild {
                   GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                   GHC.Base.Just b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        GHC.Show.$fShowMaybe1
                        (case b1 of ww2 { Chapter2.Location ww3 ww4 ww5 ->
                         Chapter2.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           ww5
                           (GHC.Types.[] @ GHC.Types.Char) }) }) -}
58781e17a9d4315eec16214baa407f5c
  main_inputs :: [GHC.Types.Double]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Double
                   Main.main4
                   Main.main2) -}
0b10713174f54b50fee2f37abc60d115
  main_roomA :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main22
                   Main.main20
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
08772b0cbb38ad3077723b4d4a194868
  main_roomB :: Chapter2.Workspace
  {- Strictness: m,
     Unfolding: (Chapter2.Location
                   Main.main19
                   Main.main17
                   (GHC.Types.[] @ Chapter2.Workspace)) -}
993b887cf629c964a4e9f28a3d8e6c5a
  main_showl :: [GHC.Types.Double] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2 -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

